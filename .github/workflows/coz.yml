name: Profile with coz

on:
  push:
    branches: [ "methylation-paired-end" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    
    - uses: actions/checkout@v3
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt install linux-tools-common linux-tools-generic linux-tools-`uname -r`
    - name: Install Flamegraph
      run: |
        cargo install flamegraph  
        echo debug_1
        ls /proc/sys/kernel/
        echo debug_2
        cat  /etc/sysctl.conf
        echo debug_3
        echo "-1" | sudo tee /proc/sys/kernel/perf_event_paranoid
    - name: Run Flamegraph
      run: |
        cargo flamegraph --output ci_results/flamegraph.svg -- preprocess variants tests/resources/coz_profiling/ref.fa --candidates tests/resources/coz_profiling/candidates.vcf --bam tests/resources/coz_profiling/normal.bam --read-type Nanopore > ci_results/normal.bcf
        
    - name: Upload result as artifact
      uses: actions/upload-artifact@v2.2.0
      with:
        name: flamegraph
        path: ci_results
        if-no-files-found: error
        retention-days: 90
    # sudo apt-get install libdwarf-dev build-essential cmake docutils-common git python3 pkg-config libbz2-dev libsqlite3-dev
    # - name: Install Coz
    #   run: |
    #     # Install normal
    #     # sudo apt update
    #     # sudo apt install coz-profiler


        
    #     # From source: 
    #     sudo apt-get update
    #     sudo apt-get install libdwarf-dev
    #     sudo apt-get install build-essential cmake docutils-common git python3 pkg-config
    #     git clone https://github.com/antoyo/libelfin && cd libelfin && make && sudo make install && cd ..
    #     export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
        
    #     # git clone https://github.com/plasma-umass/coz && cd coz && cmake . && make && sudo make install && cd ..
    #     git clone https://github.com/plasma-umass/coz 
    #     cd coz && pkg_check_modules(libelf REQUIRED libelf++>=0.1) && pkg_check_modules(libdwarf REQUIRED libdwarf++>=0.1) && cd ..
    #     cd coz/build && cmake .. && make
    #     sudo sh -c 'echo 1 >/proc/sys/kernel/perf_event_paranoid'
    #     # sudo apt-get install libbz2-dev libsqlite3-dev
    #     # cd coz/benchmarks && cmake . && make && cd ../..
    #     # coz run --- ./coz/benchmarks/toy/toy
    #     # coz plot

    #     # sudo apt install libelfin-dev
        
    #     # Downgrade gcc
    #     # sudo apt install gcc-10 g++-10
    #   # Found on: https://github.com/plasma-umass/coz/issues/107#issuecomment-1063169616
    #   # git clone https://github.com/antoyo/libelfin.git && cd libelfin && make && sudo make install && cd ..
    # - name: Check Installation
    #   run: |
    #     coz run --help
    # # - name: Build varlo
    #   # run: |
    #     # RUSTFLAGS="-g -C debuginfo=2" cargo build

    #     # export RUSTFLAGS="-C link-arg=-gdwarf-3"
    #     # RUSTFLAGS="-C link-arg=gdwarf-5" coz run --- cargo run --release -- preprocess variants tests/resources/coz_profiling/ref.fa --candidates tests/resources/coz_profiling/candidates.vcf --bam tests/resources/coz_profiling/normal.bam --read-type Nanopore
    
    #     # ls /usr/lib/libdwarf++.so.0
    #     # sudo ldconfig
    #     # echo $LD_LIBRARY_PATH
    #     # export LD_LIBRARY_PATH=/pfad/zur/libelfin:$LD_LIBRARY_PATH

    # # - name: Run Varlo
    # #   run : |
    # #     pwd
    # #     ls -R tests/resources/coz_profiling
    # #     cargo run --release -- preprocess variants tests/resources/coz_profiling/ref.fa --candidates tests/resources/coz_profiling/candidates.vcf --bam tests/resources/coz_profiling/normal.bam --read-type Nanopore
    # - name: Run Coz
    #   run: coz run --- cargo run --release -- preprocess variants tests/resources/coz_profiling/ref.fa --candidates tests/resources/coz_profiling/candidates.vcf --bam tests/resources/coz_profiling/normal.bam --read-type Nanopore
    
    
    
    # # - name: Prepare Coz
    # #   run: |
    # #     sudo sh -c 'echo 1 >/proc/sys/kernel/perf_event_paranoid'
    # #     cd coz/benchmarks && cmake . && make && cd ../..
    # #     coz run --- ./coz/benchmarks/toy/toy
        
    # # - name: Build with debug information
    # #   run: cargo build --verbose
    # # - name: Varlociraptor help
    # #   run: cargo run --release -- --help
